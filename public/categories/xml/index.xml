<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xml on 飞狐的部落格</title>
    <link>https://lucumt.info/categories/xml/</link>
    <description>Recent content in Xml on 飞狐的部落格</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 04 Jan 2018 11:21:42 +0800</lastBuildDate>
    <atom:link href="https://lucumt.info/categories/xml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>利用dom4j修改含有回车换行符的XML文件</title>
      <link>https://lucumt.info/posts/update-xml-file-has-line-breaks-using-dom4j/</link>
      <pubDate>Thu, 04 Jan 2018 11:21:42 +0800</pubDate>
      
      <guid>https://lucumt.info/posts/update-xml-file-has-line-breaks-using-dom4j/</guid>
      <description>&lt;p&gt;这几天工作中遇到一个利用 &lt;strong&gt;&lt;a href=&#34;https://dom4j.github.io/&#34;&gt;dom4j&lt;/a&gt;&lt;/strong&gt; 更新XML文件的任务，由于XML文件中部分属性包含有换行符，利用 &lt;em&gt;dom4j()1.6.1&lt;/em&gt; 默认的方法更新XML文件后换行符会丢失。 各种Google、StackOverflow折腾好久后终于解决该问题，简单记录下。&lt;/p&gt;

&lt;p&gt;对于修改XML文件，自己很自然的想到利用 &lt;em&gt;dom4j&lt;/em&gt; 和 &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XPath&#34;&gt;XPath&lt;/a&gt;&lt;/strong&gt; 来实现功能，使用的代码类似如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static void updateXML() {
	SAXReader saxReader = new SAXReader();
	File oldFile = new File(&amp;quot;D:\\test\\old_test.xml&amp;quot;);
	File newFile = new File(&amp;quot;D:\\test\\new_test.xml&amp;quot;);
	try {
		Document oldDoc = saxReader.read(oldFile);
		Element oldRoot = oldDoc.getRootElement();
		Element oldEle = (Element) oldRoot.selectSingleNode(&amp;quot;//book[@id=&#39;01001&#39;]/name&amp;quot;);
		System.out.println(oldEle.attributeValue(&amp;quot;description&amp;quot;));
		
		OutputFormat format = OutputFormat.createPrettyPrint();
		format.setEncoding(&amp;quot;UTF-8&amp;quot;);
		format.setNewLineAfterDeclaration(false);
		
		//写入新文件
		XMLWriter writer = new XMLWriter(new FileWriter(newFile), format);
		writer.write(oldDoc);
		writer.flush();
		writer.close();

		System.out.println(&amp;quot;\n================分隔符==================\n&amp;quot;);
		//从新文件中读取数据
		Document newDoc = saxReader.read(newFile);
		Element newRoot = newDoc.getRootElement();
		Element newEle = (Element) newRoot.selectSingleNode(&amp;quot;//book[@id=&#39;01001&#39;]/name&amp;quot;);
		System.out.println(newEle.attributeValue(&amp;quot;description&amp;quot;));
	} catch (DocumentException e) {
		e.printStackTrace();
	} catch (IOException e) {
		e.printStackTrace();
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对应的XML文件类似如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;books&amp;gt;
  &amp;lt;book id=&amp;quot;01001&amp;quot;&amp;gt;
    &amp;lt;name description=&amp;quot;New coverage includes:&amp;amp;#xD;&amp;amp;#xA;&amp;amp;#xD;&amp;amp;#xA;Functional interfaces, lambda expressions, method references, and streams&amp;amp;#xD;&amp;amp;#xA;Default and static methods in interfaces&amp;amp;#xD;&amp;amp;#xA;Type inference, including the diamond operator for generic types&amp;amp;#xD;&amp;amp;#xA;The @SafeVarargs annotation&amp;amp;#xD;&amp;amp;#xA;The try-with-resources statement&amp;quot;&amp;gt;Effective Java&amp;lt;/name&amp;gt;
    &amp;lt;price&amp;gt;50.6&amp;lt;/price&amp;gt;
    &amp;lt;author&amp;gt;Joshua Bloch&amp;lt;/author&amp;gt;
    &amp;lt;publishDate&amp;gt;2017-12-08&amp;lt;/publishDate&amp;gt;
  &amp;lt;/book&amp;gt;
&amp;lt;/books&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述代码的逻辑很简单：首先从XML打开一个XML文件，然后输出某个书本的描述信息，将其写入新的XML文件，然后在新XML文件中读取相同的信息。理论上前后两次输出的结果应该一样，但实际运行后发现从新的XML文件中读取出的描述信息换行符都丢失了，前后两次输出的结果不一致！&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/update-xml-file-has-line-breaks-using-dom4j/dom4j_incorrect_output.png&#34; alt=&#34;&amp;quot;新旧XML文件的输出格式不同&amp;quot;&#34; title=&#34;新旧XML文件的输入格式不同&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;对比新旧XML文件后发现，产生此现象的原因是: &lt;strong&gt;dom4j 自作主张的在写入XML文件时将 &lt;em&gt;&amp;amp;#xD;&amp;amp;#xA;&lt;/em&gt; 替换为了 &lt;em&gt;\r\n&lt;/em&gt; ，而XML文件中标准的回车换行符是用 &lt;em&gt;&amp;amp;#xD;&amp;amp;#xA;&lt;/em&gt; 来表示的&lt;/strong&gt; ，将它们替换后再次读取的结果很显然不符合要求。&lt;/p&gt;

&lt;p&gt;了解到问题产生的根源后，则其解决思路也很明确： &lt;strong&gt;写入XML文件时，将 &lt;em&gt;\r\n&lt;/em&gt; 再次替换为 &lt;em&gt;&amp;amp;#xD;&amp;amp;#xA;&lt;/em&gt; 即可&lt;/strong&gt;。最开始自己想采用如下的方法来简单替换，运行完毕后发现结果和前面的一致，问题依旧。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String description = oldEle.attributeValue(&amp;quot;description&amp;quot;);
description = description.replaceAll(&amp;quot;\r\n&amp;quot;,&amp;quot;&amp;amp;#xD;&amp;amp;#xA;&amp;quot;);
oldEle.attributeValue(&amp;quot;description&amp;quot;,description);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;
进一步分析后发现，&lt;em&gt;dom4j&lt;/em&gt; 不仅会在读取XML文件时对 &lt;em&gt;&amp;amp;#xD;&amp;amp;#xA;&lt;/em&gt; 进行转义，而且在写入XML文件时也会对 &lt;em&gt;&amp;amp;#xD;&amp;amp;#xA;&lt;/em&gt; 进行转义，前面的方法只是解决了读取的问题，写入时没有处理，所以问题依旧。&lt;/p&gt;

&lt;p&gt;写入时主要的操作类是 &lt;em&gt;OutputFormat&lt;/em&gt; 和 &lt;em&gt;XMLWriter&lt;/em&gt; ，自己一开始以为可以通过 &lt;em&gt;OutputFormat&lt;/em&gt; 进行响应的设置实现，将代码修改如下，然并卵，问题依旧！&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OutputFormat format = OutputFormat.createPrettyPrint();
format.setNewlines(true);
format.setLineSeparator(&amp;quot;\r\n&amp;quot;);
format.setEncoding(&amp;quot;UTF-8&amp;quot;);
format.setNewLineAfterDeclaration(false);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;
&lt;em&gt;OutputFormat&lt;/em&gt; 不好使，只能从 &lt;em&gt;XMLWriter&lt;/em&gt; 着手，调用 &lt;em&gt;writer.setEscapeText(false)&lt;/em&gt; 方法也不能解决问题，看来只能放出大招，自己定义实现一个 XMLWriter类，将以及转义后的回车换行符又换回去，代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class HRXMLWriter extends XMLWriter {

	public HRXMLWriter(Writer wr, OutputFormat format) {
		super(wr, format);
	}

	@Override
	protected String escapeAttributeEntities(String text) {
		text = super.escapeAttributeEntities(text);
		if (text.indexOf(&amp;quot;\r\n&amp;quot;) &amp;gt; -1) {
			text = text.replaceAll(&amp;quot;\r\n&amp;quot;, &amp;quot;&amp;amp;#xD;&amp;amp;#xA;&amp;quot;);
		}
		return text;
	}

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后将写入时的代码修改如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//採用定义写入类HRXMLWriter
XMLWriter writer = new HRXMLWriter(new FileWriter(newFile), format);
writer.write(oldDoc);
writer.flush();
writer.close();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行结果如下，问题顺利解决！&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/update-xml-file-has-line-breaks-using-dom4j/dom4j_correct_output.png&#34; alt=&#34;&amp;quot;新旧XML文件的输出格式相同&amp;quot;&#34; title=&#34;新旧XML文件的输入格式相同&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;坑爹啊！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>