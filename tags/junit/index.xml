<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Junit on 飞狐的部落格</title>
    <link>https://lucumt.info/tags/junit/</link>
    <description>Recent content in Junit on 飞狐的部落格</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Jul 2023 22:42:07 +0800</lastBuildDate>
    <atom:link href="https://lucumt.info/tags/junit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]如何测试私有方法</title>
      <link>https://lucumt.info/post/translate/junit5/testing-private-methods/</link>
      <pubDate>Mon, 03 Jul 2023 22:42:07 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/testing-private-methods/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/testing-private-methods/&#34;&gt;&lt;strong&gt;How Do I Test Private Methods?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Junit 5 预期异常 - 如何检测异常是否抛出</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-expected-exception/</link>
      <pubDate>Sun, 02 Jul 2023 14:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-expected-exception/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-expected-exception/&#34;&gt;&lt;strong&gt;JUnit 5 Expected Exception: How to assert an exception is thrown?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit5 Gradle示例 - 基于Gradle运行测试</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-gradle-example/</link>
      <pubDate>Tue, 27 Jun 2023 14:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-gradle-example/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-gradle-example/&#34;&gt;&lt;strong&gt;JUnit 5 Gradle Example&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit5 Maven示例-基于Surefire运行测试</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-maven-example/</link>
      <pubDate>Fri, 23 Jun 2023 12:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-maven-example/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-maven-example/&#34;&gt;&lt;strong&gt;JUnit 5 Maven Example: Running Tests with Surefire&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]从JUnit 4 迁移到JUnit 5 - 权威指南</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-migration/</link>
      <pubDate>Wed, 21 Jun 2023 22:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-migration/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-migration/&#34;&gt;&lt;strong&gt;Migrating From JUnit 4 to JUnit 5: A Definitive Guide&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit5 整合Kotlin</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-kotlin/</link>
      <pubDate>Wed, 21 Jun 2023 19:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-kotlin/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-kotlin//&#34;&gt;&lt;strong&gt;JUnit 5 With Kotlin for Java Developers&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]在JUnit 5中使用Mockito</title>
      <link>https://lucumt.info/post/translate/junit5/using-mockito-in-junit5/</link>
      <pubDate>Mon, 19 Jun 2023 19:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/using-mockito-in-junit5/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-mockito/&#34;&gt;&lt;strong&gt;Using Mockito With JUnit 5&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit 5 参数化测试实用指南</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-parameterized-tests/</link>
      <pubDate>Sat, 17 Jun 2023 09:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-parameterized-tests/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-parameterized-tests/&#34;&gt;&lt;strong&gt;A More Practical Guide to JUnit 5 Parameterized Tests&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit 5 生命周期 - 注释之前和之后</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-test-lifecycle/</link>
      <pubDate>Fri, 16 Jun 2023 19:21:43 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-test-lifecycle/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-test-lifecycle/&#34;&gt;&lt;strong&gt;JUnit 5 Test Lifecycle: Before and After Annotations&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit 5 嵌套测试 - 将关联的测试分组在一起</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-nested-tests/</link>
      <pubDate>Tue, 02 May 2023 13:12:24 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-nested-tests/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-nested-tests/&#34;&gt;&lt;strong&gt;JUnit 5 Nested Tests: Grouping Related Tests Together&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit 5 断言 - 验证测试结果</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-assertions/</link>
      <pubDate>Mon, 01 May 2023 13:37:22 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-assertions/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-assertions/&#34;&gt;&lt;strong&gt;JUnit 5 Assertions: Verifying Test Results&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JUnit 5 入门 - 编写第一段测试代码</title>
      <link>https://lucumt.info/post/translate/junit5/junit-5-getting-started/</link>
      <pubDate>Mon, 01 May 2023 09:51:22 +0800</pubDate>
      <guid>https://lucumt.info/post/translate/junit5/junit-5-getting-started/</guid>
      <description>&lt;p&gt;本文翻译自&lt;a href=&#34;https://www.arhohuttunen.com/junit-5-getting-started&#34;&gt;&lt;strong&gt;Getting Started with JUnit 5: Writing Your First Test&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用Spring和JUnit对数据库操作进行单元测试</title>
      <link>https://lucumt.info/post/spring/spring-core/using-junit-in-spring/</link>
      <pubDate>Sun, 20 Mar 2016 16:27:21 +0800</pubDate>
      <guid>https://lucumt.info/post/spring/spring-core/using-junit-in-spring/</guid>
      <description>&lt;p&gt;在进行Java程序开发时，我们偶尔会被要求使用&lt;a href=&#34;http://junit.org/&#34;&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/a&gt;进行单元测试来确保我们所写的程序逻辑是正确的。一个良好的单元测试应该具备 &lt;code&gt;覆盖度高&lt;/code&gt;，&lt;code&gt;可重复执行&lt;/code&gt;,&lt;code&gt;单一性&lt;/code&gt;等特点。本文主要关注&lt;code&gt;可重复执行&lt;/code&gt;，在Web开发中，大部分方法都会使数据库的记录发生变化，为了能够重复执行，必须利用&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1&#34;&gt;&lt;strong&gt;数据库事务&lt;/strong&gt;&lt;/a&gt;来进行&lt;code&gt;回滚&lt;/code&gt;从而达到重复执行的目的。最原始的方法是利用 &lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/sql/Connection.html&#34;&gt;&lt;strong&gt;java.sql.Connection&lt;/strong&gt;&lt;/a&gt;类的 &lt;code&gt;commit()&lt;/code&gt; 或 &lt;code&gt;rollback()&lt;/code&gt; 方法来在每个单元测试方法中手动的进行提交或回滚，此种方式使得单元测试代码嵌入了与实际业务逻辑无关的数据库操作事务控制代码。利用&lt;a href=&#34;https://spring.io/&#34;&gt;&lt;strong&gt;Spring&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&#34;http://junit.org/&#34;&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/a&gt;通过注解的方式我们可以很容易的对单元测试中的数据库操作进行事务控制。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Spring中利用Mock对HttpServletRequest进行单元测试</title>
      <link>https://lucumt.info/post/spring/spring-mvc/using-mock-test-http-servlet-request/</link>
      <pubDate>Sat, 19 Mar 2016 22:43:47 +0800</pubDate>
      <guid>https://lucumt.info/post/spring/spring-mvc/using-mock-test-http-servlet-request/</guid>
      <description>&lt;h2 id=&#34;编写单元测试时的注意事项&#34;&gt;编写单元测试时的注意事项&lt;/h2&gt;&#xA;&lt;p&gt;根据软件开发过程中的&lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;&lt;strong&gt;TDD&lt;/strong&gt;&lt;/a&gt;理论，在我们编写自己的代码时，要尽量使得该代码能够进行单元测试。为了能够使得代码可以进行单元测试，我们在给接口或方法传入参数时要尽量传入简单参数，避免传入&lt;code&gt;HttpServletRequest&lt;/code&gt; , &lt;code&gt;ServletContext&lt;/code&gt;等和web上下文相关的复杂对象。但仍有部分情况下基于代码简洁性和可维护性的考虑，我们需要传入&lt;code&gt;HttpServletRequest&lt;/code&gt;对象，此时对此类方法进行&lt;a href=&#34;http://junit.org/&#34;&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/a&gt;单元测试时会较为困难，本文介绍一种在&lt;a href=&#34;https://spring.io/&#34;&gt;&lt;strong&gt;Spring&lt;/strong&gt;&lt;/a&gt;中通过&lt;a href=&#34;http://mockito.org/&#34;&gt;&lt;strong&gt;Mock&lt;/strong&gt;&lt;/a&gt;来模拟&lt;code&gt;HttpServletRequest&lt;/code&gt;对象进行&lt;a href=&#34;http://junit.org/&#34;&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/a&gt;单元测试的方法。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
