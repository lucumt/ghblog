<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Https on 飞狐的部落格</title>
    <link>https://lucumt.info/categories/https/</link>
    <description>Recent content in Https on 飞狐的部落格</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 24 Dec 2017 10:28:03 +0800</lastBuildDate>
    <atom:link href="https://lucumt.info/categories/https/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>将基于Github Pages的自定义域名博客迁移到HTTPS</title>
      <link>https://lucumt.info/posts/migrate-github-blog-from-http-to-https/</link>
      <pubDate>Sun, 24 Dec 2017 10:28:03 +0800</pubDate>
      
      <guid>https://lucumt.info/posts/migrate-github-blog-from-http-to-https/</guid>
      <description>

&lt;p&gt;越来越多的网站和个人博客都变成 &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/HTTPS&#34; title=&#34;https://en.wikipedia.org/wiki/HTTPS&#34;&gt;HTTPS&lt;/a&gt;&lt;/strong&gt; ，而自己的博客一直都是用的是 &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34; title=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt;&lt;/strong&gt; 协议，作为一个具有强迫症的人，每次用 &lt;strong&gt;&lt;a href=&#34;https://www.google.cn/chrome/browser/desktop/index.html&#34; title=&#34;https://www.google.cn/chrome/browser/desktop/index.html&#34;&gt;Chrome&lt;/a&gt;&lt;/strong&gt; 浏览器打开个人博客时看见浏览器地址栏显示的&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/http_icon.png&#34; alt=&#34;&amp;quot;Chrome HTTP标识&amp;quot;&#34; title=&#34;Chrome HTTP标识&#34; /&gt;
 都感觉很不舒服。趁着前段时间不太忙，将个人博客从 &lt;em&gt;HTTP&lt;/em&gt; 迁移到了 &lt;em&gt;HTTPS&lt;/em&gt; ，先记录下。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
一开始我想直接通过在 &lt;strong&gt;&lt;a href=&#34;https://www.godaddy.com/&#34;&gt;GoDaddy&lt;/a&gt;&lt;/strong&gt; 上直接购买 &lt;em&gt;HTTPS&lt;/em&gt; 服务来实现，去官网查看后发现费用太高，一年大约100美刀，果断弃之。 Google后发现很多人都用 &lt;strong&gt;&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Cloudflare&lt;/a&gt;&lt;/strong&gt; 通过转发请求来实现 &lt;em&gt;HTTPS&lt;/em&gt; 访问，操作起来也很快，自己便也采用 &lt;em&gt;Cloudflare&lt;/em&gt; 实现， 本文主要是基于 &lt;em&gt;Cloudflare&lt;/em&gt; 的实现说明。&lt;/p&gt;

&lt;h2 id=&#34;操作过程:a714b797edb698eabc838855a40c47d3&#34;&gt;操作过程&lt;/h2&gt;

&lt;h3 id=&#34;给博客添加自定义域名:a714b797edb698eabc838855a40c47d3&#34;&gt;给博客添加自定义域名&lt;/h3&gt;

&lt;p&gt;本人使用的是 &lt;em&gt;GoDaddy&lt;/em&gt; 来设置自定义域名，具体操作请参见 &lt;strong&gt;&lt;a href=&#34;https://lucumt.info/posts/create-website-with-hugo/#%E5%88%A9%E7%94%A8godaddy%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D:ef8b9e40461ea61e62e36d1aa4c54d14&#34;&gt;利用GoDaddy配置自定义域名&lt;/a&gt;&lt;/strong&gt;， 核心的操作就是给 &lt;strong&gt;CNAME&lt;/strong&gt; 文件添加 &lt;em&gt;Github Pages&lt;/em&gt; 给出的两条&lt;strong&gt;A&lt;/strong&gt;记录IP地址，此处不再详述。&lt;/p&gt;

&lt;h3 id=&#34;利用cloudflare修改dns服务器:a714b797edb698eabc838855a40c47d3&#34;&gt;利用Cloudflare修改DNS服务器&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;打开 &lt;em&gt;Cloudflare官网&lt;/em&gt; 注册一个 &lt;em&gt;Cloudflare&lt;/em&gt; 账户。注册成功之后，点击页面右上角的 &lt;em&gt;add site&lt;/em&gt; 链接，添加一个网站，在下图输入框中输入自己的域名，点击 Begin Scan 按钮开始扫描。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/add_site_in_cloudflare.png&#34; alt=&#34;&amp;quot;在Cloudflare中扫描站点&amp;quot;&#34; title=&#34;在Cloudflare中扫描站点&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;扫描完毕后点击 &lt;em&gt;Contiue Setup&lt;/em&gt; ，在类似如下图所示的界面中选择 &lt;em&gt;Free Website&lt;/em&gt; ，然后点击页面底部的 &lt;em&gt;Continue&lt;/em&gt; 按钮。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_free_website.png&#34; alt=&#34;&amp;quot;选择Cloudflare免费站点&amp;quot;&#34; title=&#34;选择Cloudflare免费站点&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;在下图所示的 &lt;em&gt;Cloudflare Nameservers&lt;/em&gt; 说明界面中根据要求来修改自定义域名的DNS服务器。
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_nameservers.png&#34; alt=&#34;&amp;quot;Cloudflare扫描结果&amp;quot;&#34; title=&#34;Cloudflare扫描结果&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;登录 &lt;em&gt;GoDaddy&lt;/em&gt; ，打开响应域名的 &lt;em&gt;Manage DNS&lt;/em&gt; 界面，将 &lt;em&gt;Nameservers&lt;/em&gt; 从 &lt;em&gt;Default&lt;/em&gt; 修改为 &lt;em&gt;Custom&lt;/em&gt; 然后添加前一个步骤中的两个值分别加上并点击保存。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/modify_dns_server_in_godaddy.png&#34; alt=&#34;&amp;quot;Cloudflare扫描结果&amp;quot;&#34; title=&#34;Cloudflare扫描结果&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;回到 &lt;em&gt;Cloudflare&lt;/em&gt; 网站，点击 &lt;em&gt;Overview&lt;/em&gt; 按钮，查看域名的状态是否为如下所示的 &lt;em&gt;Active*，若是则表示DNS服务器修改成功，若不是 *Active&lt;/em&gt; 请等待几分钟。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_website_actived.png&#34; alt=&#34;&amp;quot;Cloudflare中配置DNS成功&amp;quot;&#34; title=&#34;Cloudflare中配置DNS成功&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;cloudflare中开启https设置:a714b797edb698eabc838855a40c47d3&#34;&gt;Cloudflare中开启HTTPS设置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在 &lt;em&gt;Cloudflare&lt;/em&gt; 网站上点击顶部的 &lt;em&gt;Crypto&lt;/em&gt; 按钮，将状态修改为 *Full*。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_ssl_setting.png&#34; alt=&#34;&amp;quot;Cloudflare中SSL设置&amp;quot;&#34; title=&#34;Cloudflare中SSL设置&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;在顶部切换到 &lt;em&gt;Page Rules&lt;/em&gt; 界面，点击 &lt;em&gt;Create Page Rule&lt;/em&gt; ，添加规则&lt;code&gt;http://lucumt.info/*&lt;/code&gt; 并选择 &lt;em&gt;Always Use HTTPS&lt;/em&gt; 来强制该域名下的所有请求都是用HTTPS实现，然后点击 &lt;em&gt;Save and Deploy&lt;/em&gt; 来部署该规则，注意此处的规则是 &lt;em&gt;HTTP&lt;/em&gt; 而不是 &lt;em&gt;HTTPS&lt;/em&gt; 。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_page_rule_setting.png&#34; alt=&#34;&amp;quot;Cloudflare中Page Rule设置&amp;quot;&#34; title=&#34;Cloudflare中Page Rule设置&#34; /&gt;
&lt;br /&gt;
执行完这一步后理论上通过 &lt;em&gt;HTTPS&lt;/em&gt; 可以正常的访问个人博客，但还需对博客源码做一些修改。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;将代码中所有http修改为https:a714b797edb698eabc838855a40c47d3&#34;&gt;将代码中所有HTTP修改为HTTPS&lt;/h3&gt;

&lt;p&gt;在执行完前面的步骤后，在浏览器中用 &lt;em&gt;HTTPS&lt;/em&gt; 访问个人博客时，可能看到的还是&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/http_icon.png&#34; alt=&#34;&amp;quot;Chrome HTTP标识&amp;quot;&#34; title=&#34;Chrome HTTP标识&#34; /&gt;
而不是自己期望中的小绿锁，同时浏览器控制台可能会出现类似 &lt;em&gt;Mixed Content,The page at &amp;hellip;,The request has been blocked,the content must be serverd over HTTPS&lt;/em&gt; 的错误信息。其原因是由于某些页面中存在混合内容，即部分请求还是以 &lt;em&gt;HTTP&lt;/em&gt; 方式实现的，如加载 &lt;em&gt;Javascript&lt;/em&gt; 、 &lt;em&gt;CSS&lt;/em&gt; 等，解决方法也很简单，&lt;strong&gt;将所有的HTTP请求都改为HTTPS即可&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;以我个人基于 &lt;strong&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/strong&gt; 的博客为例，要进行如下几步操作：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将个人 &lt;em&gt;Hugo&lt;/em&gt; 源代码中所有的 &lt;em&gt;HTTP&lt;/em&gt; 请求都修改为 &lt;em&gt;HTTP&lt;/em&gt;,包括页面中的直接请求和 &lt;em&gt;Javascript&lt;/em&gt; 、 &lt;em&gt;CSS&lt;/em&gt; 等文件中的间接请求。&lt;/li&gt;
&lt;li&gt;利用 &lt;code&gt;hugo server -D --baseUrl=&amp;quot;https://lucumt.info&amp;quot; --appendPort=false&lt;/code&gt; 重新生成基于 &lt;em&gt;HTTPS&lt;/em&gt; 的源文件页面。&lt;/li&gt;
&lt;li&gt;将生成的博客源代码重新上传到 &lt;em&gt;Github&lt;/em&gt; 仓库中，经过1分钟左右以 &lt;em&gt;HTTPS&lt;/em&gt; 的方式在浏览器中打开个人博客，期待中的小绿锁入愿出现，世界终于和谐了！&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/open-blog-website-via-https.png&#34; alt=&#34;&amp;quot;通过HTTPS打开个人博客&amp;quot;&#34; title=&#34;通过HTTPS打开个人博客&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;注意事项:a714b797edb698eabc838855a40c47d3&#34;&gt;注意事项&lt;/h2&gt;

&lt;p&gt;通过 &lt;em&gt;Cloudflare&lt;/em&gt; 虽然可以快速的将自己的个人博客迁移到 &lt;em&gt;HTTPS&lt;/em&gt; ，但基于以下两个方面的原因，在条件许可的情况下还是应该使用其他方式实现HTTPS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;免费计划下的 &lt;em&gt;Cloudflare&lt;/em&gt; 实际上相当于一个中介，我们的访问请求先被 &lt;em&gt;Cloudflare&lt;/em&gt; 代理实现 &lt;em&gt;HTTPS&lt;/em&gt; 接收到然后将其转发给原始的服务器（如 &lt;em&gt;Github Pages&lt;/em&gt; 服务器）。虽然浏览器与 &lt;em&gt;Cloudflare&lt;/em&gt; 之间的通信是 &lt;em&gt;HTTPS&lt;/em&gt; 加密，但是 &lt;em&gt;Cloudflare&lt;/em&gt; 与实际服务器之间的通信不一定是加密的，存在被挟持和篡改的可能。 &lt;em&gt;Cloudflare&lt;/em&gt; 之前也被爆出过 &lt;strong&gt;&lt;a href=&#34;https://thehackernews.com/2017/02/cloudflare-vulnerability.html&#34; title=&#34;Serious Bug Exposes Sensitive Data From Millions Sites Sitting Behind CloudFlare&#34;&gt;安全漏洞和敏感数据泄露&lt;/a&gt;&lt;/strong&gt;，故商业网站通常不用 &lt;em&gt;Cloudflare&lt;/em&gt; 免费计划，但个人博客出于增加搜索引擎收录和省钱等原因，可以使用 &lt;em&gt;Cloudflare&lt;/em&gt; 免费计划。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/migrate-github-blog-from-http-to-https/cloudflare_ssl_website.png&#34; alt=&#34;&amp;quot;Cloudflare代理实现HTTPS&amp;quot;&#34; title=&#34;Cloudflare代理实现HTTPS&#34; /&gt;&lt;/li&gt;
&lt;li&gt;由于经过 &lt;em&gt;Cloudflare&lt;/em&gt; 这层代码，访问速度肯定没有直接访问原始服务器那么快，对于响应速度要求高的用户不合适。&lt;/li&gt;
&lt;li&gt;由于众所周知的原因，在天朝 &lt;em&gt;Cloudflare&lt;/em&gt; 访问速度比国内慢，而且指不定哪天就被ban了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bakumon.me/blog/p/github-pages-https-ssl.html&#34;&gt;https://bakumon.me/blog/p/github-pages-https-ssl.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>