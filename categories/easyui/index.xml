<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Easyui on 飞狐的部落格</title>
    <link>https://lucumt.info/categories/easyui/</link>
    <description>Recent content in Easyui on 飞狐的部落格</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 06 Aug 2017 00:06:36 +0800</lastBuildDate>
    <atom:link href="https://lucumt.info/categories/easyui/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>解决EasyUI DataGrid中的行在列冻结时无法对齐的问题</title>
      <link>https://lucumt.info/posts/easyui-datagrid-row-not-align-when-column-frozen/</link>
      <pubDate>Sun, 06 Aug 2017 00:06:36 +0800</pubDate>
      
      <guid>https://lucumt.info/posts/easyui-datagrid-row-not-align-when-column-frozen/</guid>
      <description>

&lt;p&gt;相对于传统的用HTML中TABLE实现的表格，利用 &lt;strong&gt;&lt;a href=&#34;https://www.jeasyui.com&#34;&gt;EasyUI&lt;/a&gt;&lt;/strong&gt; 中的 &lt;strong&gt;&lt;a href=&#34;https://www.jeasyui.com/demo/main/index.php?plugin=DataGrid&#34;&gt;DataGrid&lt;/a&gt;&lt;/strong&gt; 实现的表格具有很多优点，如可以 &lt;em&gt;对列宽进行拖动调整、列冻结、行冻结、自定义格式化&lt;/em&gt; 等功能，故而在Web开发中得到了广泛的应用。最近自己在使用DataGrid的列冻结功能时遇到了由于某些单元格中的内容较多导致该行无法对齐的问题，由于当前在EasyUI官网中无法找到该问题的解决方案，自己研究DataGrid的实现原理后，找到了变通的解决方案，故先记录下。&lt;/p&gt;

&lt;h2 id=&#34;easyui-datagrid正常情况下的列冻结:1a1d88573c9d97df57840a524ba54e28&#34;&gt;EasyUI DataGrid正常情况下的列冻结&lt;/h2&gt;

&lt;p&gt;下图为一个常见的DataGrid使用示例，该图展示了我们在使用EasyUI DataGrid时经常会遇到的一个问题：&lt;strong&gt;由于某个列的长度很长导致表格出现滚动条&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-no-frozen-column1.png&#34; alt=&#34;&amp;quot;没有冻结列时正常显示的DataGrid&amp;quot;&#34; title=&#34;没有冻结列时正常显示的DataGrid&#34; /&gt;
&lt;br /&gt;
对应的代码为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;thead&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;name&#39;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;书名&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;price&#39;,align:&#39;center&#39;,width:70&amp;quot;&amp;gt;&amp;lt;b&amp;gt;价格&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;pubdate&#39;,align:&#39;center&#39;,width:90&amp;quot;&amp;gt;&amp;lt;b&amp;gt;出版日期&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;description&#39;,width:800&amp;quot;&amp;gt;&amp;lt;b&amp;gt;简要介绍&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得益于EasyUI DataGrid强大的功能，当表格中列的宽度太长时，它会自动加上横向滚动条，避免像传统的HTML TABLE表格在内容过多时会自己挤成一团，通过拖动滚动条，我们可以很方便的查看表格中各列的内容。&lt;/p&gt;

&lt;p&gt;但有时候我们会运到另外一个问题，拖动滚动条时前面的某些列就不见了，如本例中的书名，在某些情况下可能会对我们的使用带来不便。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-no-frozen-column2.png&#34; alt=&#34;&amp;quot;拖动滚动条时无法看见前面的列&amp;quot;&#34; title=&#34;拖动滚动条时无法看见前面的列&#34; /&gt;
&lt;br /&gt;
此时DataGrid的列冻结功能就可以派上用场了，只需要将需要固定的列冻结即可，在本例中我想把书名列冻结，在需要修改代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;thead frozen=&amp;quot;true&amp;quot;&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;name&#39;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;书名&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
   &amp;lt;/tr&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;thead&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;price&#39;,align:&#39;center&#39;,width:70&amp;quot;&amp;gt;&amp;lt;b&amp;gt;价格&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;pubdate&#39;,align:&#39;center&#39;,width:90&amp;quot;&amp;gt;&amp;lt;b&amp;gt;出版日期&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th data-options=&amp;quot;field:&#39;description&#39;,width:800&amp;quot;&amp;gt;&amp;lt;b&amp;gt;简要介绍&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;
   &amp;lt;/tr&amp;gt;
 &amp;lt;/thead&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其对应的运行效果如下：&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-frozen-column1.png&#34; alt=&#34;&amp;quot;冻结列之后的DataGrid显示效果&amp;quot;&#34; title=&#34;冻结列之后的DataGrid显示效果&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;easyui-datagrid非正常情形下的列冻结效果:1a1d88573c9d97df57840a524ba54e28&#34;&gt;EasyUI DataGrid非正常情形下的列冻结效果&lt;/h2&gt;

&lt;p&gt;大多数情况下这种列冻结都能满足我们的需求，但上述冻结列正常显示有一个前提：&lt;strong&gt;表格中每一行各列的高度一致&lt;/strong&gt;，若表格中某些行中存在列高超出DataGrid正常高度的情形(25px)，在进行列冻结时就会出现冻结行和非冻结行无法对齐的问题。&lt;/p&gt;

&lt;p&gt;下图为一个列超出正常高度的DataGrid显示效果，从图中可以看出由于描述信息中的文字较多，导致正常的高度都比DataGrid默认的高度要很多，直观的显示就是不同行的高度不一致。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-no-frozen-column3.png&#34; alt=&#34;&amp;quot;列高超出正常高度时的DataGrid&amp;quot;&#34; title=&#34;列高超出正常高度时的DataGrid&#34; /&gt;
&lt;br /&gt;
此时若对该表格进列冻结，同样会出现出现如前所述的冻结效果，但 &lt;strong&gt;如果我们在一开始就将描述信息这列隐藏掉，之后通过点击等方式让该列显示，则会出现冻结行和非冻结行无法对齐的情况&lt;/strong&gt;，如下图所示&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-frozen-column-not-align-row.png&#34; alt=&#34;&amp;quot;列高超出正常高度时的DataGrid&amp;quot;&#34; title=&#34;列高超出正常高度时的DataGrid&#34; /&gt;
&lt;br /&gt;
对应的关键代码如下，也可以点击&lt;a href=&#34;https://jsfiddle.net/wch9rnr2/8/&#34;&gt;jsfiddle.net/wch9rnr2/8/&lt;/a&gt;查看完整的代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;button type=&amp;quot;button&amp;quot; onclick=&amp;quot;toggleDescription()&amp;quot;&amp;gt;隐藏或显示描述信息&amp;lt;/button&amp;gt;
function toggleDescription(){
	var colOptions = $(&amp;quot;#dg&amp;quot;).datagrid(&amp;quot;getColumnOption&amp;quot;,&amp;quot;description&amp;quot;);
	var isHidden = !!colOptions.hidden;
  if(isHidden){
     $(&amp;quot;#dg&amp;quot;).datagrid(&amp;quot;showColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }else{
     $(&amp;quot;#dg&amp;quot;).datagrid(&amp;quot;hideColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上图可以看出此时书名列和其余列已经无法对齐，严重印象了我们的使用效果。&lt;/p&gt;

&lt;h2 id=&#34;解决方案:1a1d88573c9d97df57840a524ba54e28&#34;&gt;解决方案&lt;/h2&gt;

&lt;p&gt;要想解决该问题，首先需要找出该问题产生的根源，利用Chrome或其它浏览器调试工具可知，当有部分列冻结时，DataGrid表格被分成了两个不同的表格，一个是冻结的表格，一个是未冻结的表格。进一步分析发现导致无法对齐的问题根源为 &lt;strong&gt;由于两个表格中同一行的高度不同，导致实际显示时看起来表格行没有对齐&lt;/strong&gt;。&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-frozen-source-element.png&#34; alt=&#34;&amp;quot;DataGrid列冻结时的源代码&amp;quot;&#34; title=&#34;DataGrid列冻结时的源代码&#34; /&gt;
&lt;br /&gt;
找到问题根源后，要解决该问题，我们只需要让表格中每一行高度保持一致即可，具体来说就是 &lt;strong&gt;要在EasyUI DataGrid渲染表格之前将同一行的每一个单元格的高度保持一致即可&lt;/strong&gt;。问题转化为寻找适当的方法切入点来修改单元格高度，即对单元格的高度进行校验。&lt;/p&gt;

&lt;p&gt;为了修正单元格的高度，我们需要首先找出特定行已冻结单元格和未冻结单元格的高度，而要找出它们的高度必须要等EasyUI DataGrid渲染完毕之后才能获取到其实际高度。本列中由于点击按钮时会对最后一列进行隐藏或显示，所以我们可以在&lt;code&gt;toggleDescription&lt;/code&gt;方法的最后执行相应的校验逻辑。&lt;/p&gt;

&lt;p&gt;进一步调试分析后发现，对于DataGrid中的某一个数据行而言，冻结列的单元格高度都一样，非冻结列的单元格高度也一样，&lt;strong&gt;为了保持整行对齐，我们只需要高度较小的单元格的高度设置为高度较高的单元格的高度即可。考虑到有些影响列，同时为了简化实现，可以将及解决方案从设置单元格的高度更改为设置特定行在冻结和非冻结部分的行高即可&lt;/strong&gt;。至于如何设置EasyUI DataGrid中数据行的高度，请参见EasyUI作者&lt;strong&gt;stworthy&lt;/strong&gt;大神在&lt;a href=&#34;http://www.jeasyui.com/forum/index.php?topic=4951.0&#34;&gt;datagrid dynamically set / reset row height&lt;/a&gt;中的回复，在该问题中，&lt;strong&gt;stworthy&lt;/strong&gt;给出的解决方案如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var dg = $(&#39;#dg&#39;);
dg.datagrid(&#39;options&#39;).rowHeight = 40;
for(var i=0; i&amp;lt;dg.datagrid(&#39;getRows&#39;).length; i++){
    dg.datagrid(&#39;refreshRow&#39;, i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;基于此，我们可以将&lt;code&gt;toggleDescription&lt;/code&gt;方法改进如下，完整的代码请参见&lt;a href=&#34;https://jsfiddle.net/wch9rnr2/9/&#34;&gt;jsfiddle.net/wch9rnr2/9/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function toggleDescription(){
  var dg = $(&amp;quot;#dg&amp;quot;);
	var colOptions = dg.datagrid(&amp;quot;getColumnOption&amp;quot;,&amp;quot;description&amp;quot;);
	var isHidden = !!colOptions.hidden;
  if(isHidden){
     dg.datagrid(&amp;quot;showColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }else{
     dg.datagrid(&amp;quot;hideColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }
 
 var dgOptions = dg.datagrid(&amp;quot;options&amp;quot;);
 var rows = dg.datagrid(&amp;quot;getRows&amp;quot;);
 var row = null;
 var tr = null;
 var height1 =0;
 var height2 =0;
 for(var i in rows){
    row = rows[i];
	  tr = dgOptions.finder.getTr(dg[0],i);
	  height1 = $(tr[0]).height();//冻结行的高度
	  height2 = $(tr[1]).height();//非冻结行的高度
	  if((isHidden&amp;amp;&amp;amp;height2&amp;gt;height1)||(!isHidden&amp;amp;&amp;amp;height1&amp;gt;height2)){
         //冻结部分在显示时的高度取较大的那个
         $(tr[0]).css(&amp;quot;height&amp;quot;,height2+&amp;quot;px&amp;quot;);
	  }
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时当我们点击按钮来显示描述信息时，DataGrid中的每一行都已经对齐，如下图所示，至此问题获得解决！&lt;br /&gt;
&lt;img src=&#34;https://lucumt.info/blog_img/easyui-datagrid-row-not-align-when-column-frozen/datagrid-frozen-column2.png&#34; alt=&#34;&amp;quot;重新校验后的DataGrid冻结列显示效果&amp;quot;&#34; title=&#34;重新校验后的DataGrid冻结列显示效果&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;在实际使用中，我发现有时候上述JavaScript校验代码还是不能正常工作，其原因为在执行校验代码时，EasyUI DataGrid还没有完全渲染完毕，此时可以利用&lt;strong&gt;&lt;a href=&#34;https://www.w3schools.com/JSREF/met_win_setTimeout.asp&#34;&gt;setTimeout&lt;/a&gt;&lt;/strong&gt;函数来延后校验代码的执行，修改后的代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function toggleDescription(){
  var dg = $(&amp;quot;#dg&amp;quot;);
	var colOptions = dg.datagrid(&amp;quot;getColumnOption&amp;quot;,&amp;quot;description&amp;quot;);
	var isHidden = !!colOptions.hidden;
  if(isHidden){
     dg.datagrid(&amp;quot;showColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }else{
     dg.datagrid(&amp;quot;hideColumn&amp;quot;,&amp;quot;description&amp;quot;);
  }
 
 var dgOptions = dg.datagrid(&amp;quot;options&amp;quot;);
 var rows = dg.datagrid(&amp;quot;getRows&amp;quot;);
 var row = null;
 var tr = null;
 var height1 =0;
 var height2 =0;
 setTimeout(function(){
   for(var i in rows){
      row = rows[i];
      tr = dgOptions.finder.getTr(dg[0],i);
      height1 = $(tr[0]).height();//冻结行的高度
      height2 = $(tr[1]).height();//非冻结行的高度
      if((isHidden&amp;amp;&amp;amp;height2&amp;gt;height1)||(!isHidden&amp;amp;&amp;amp;height1&amp;gt;height2)){
           //冻结部分在显示时的高度取较大的那个
           $(tr[0]).css(&amp;quot;height&amp;quot;,height2+&amp;quot;px&amp;quot;);
      }
    } 
 },1000);//延后一秒执行
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;考虑到实际使用中EasyUI DataGrid的渲染时间无法确定，用&lt;strong&gt;&lt;a href=&#34;https://www.w3schools.com/JSREF/met_win_setTimeout.asp&#34;&gt;setTimeout&lt;/a&gt;&lt;/strong&gt;并非最优解，希望EasyUI官方后续能为该问题提供更合理的解决方案!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>